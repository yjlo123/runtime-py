class ListNode {
    val = nil
    next = nil

    func init(val) {
        this.val = val
    }

    func setNext(node) {
        this.next = node
        this.next
    }

    func FromList(list) {
        if list == nil || list == [] {
            return nil
        }
        head = ListNode(list[0])
        tail = head
        for i in 1..list.len {
            tail = tail.setNext(ListNode(list[i]))
        }
        return head
    }

    func toStr() {
        if this.next == nil {
            return this.val
        }
        return this.val + ',' + this.next.toStr()
    }
}

class TreeNode {
    val = nil
    left = nil
    right = nil

    func init(val) {
        this.val = val
    }

    func pretty_print(indent, is_last) {
        head = if is_last { '└──' } else { '├──' }
        print(indent + head + this.val)
        child_head = if is_last { ' ' } else { '│' }
        new_indent = indent + child_head + '  '

        if this.left != nil {
            this.left.pretty_print(new_indent, false)
        } else if this.right != nil {
            print(new_indent + '├──')
        }

        if this.right != nil {
            this.right.pretty_print(new_indent, true)
        } else if this.left != nil {
            print(new_indent + '└──')
        }
    }
}
